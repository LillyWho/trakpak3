@name johnhenry/gauges/2ft
#-------------------
#Big Important Stuff
#-------------------

GaugeName = "2ft" #Short abbreviation for the gauge, used for auto-naming. Convention is to use 3 characters.
Scale = 4 #Overall scale factor for brush generation. Model will be scaled back down in the QC. Should be a power of two (1, 2, 4, etc).
# !!! Be careful about using large numbers with large track pieces. An 8192-radius 90 degree curve at 2x scale will not compile !!!
RidiculousTies = 1 #If 1, all track will have 3D ties instead of the optimized 2D tie-on-roadbed texture. Note: Switches will have some 3D ties no matter what.

#----------------
#Basic Dimensions
#----------------

#Ballast/Origin
OriginHeight = 16 #Height of the model origin off the ground - This should be higher than the top of the railhead.
BallastHeight = 4 #Height of ballast trapezoid off the ground.

#Rails
RailTopHeight = 12 #Height from ground to top of rail (railhead).
RailBottomHeight = 8 #Height from ground to bottom of rail.
BankHeight = 2 #Height of the outer rail above the inner rail for banked track.
CheckLength = 64 #Length of check rails (For switches).

#Ties
TieTopHeight = 8 #Height from ground to top of tie (3D only)
TieBottomHeight = 4 #Height from ground to bottom of tie (3D only)
TieSeparation = 16 #Distance between the centers of ties (3D only)
TieWidth = 60 #Nominal width of a tie
TieThickness = 4 #Nominal thickness of a tie
TiePlateWidth = 8 #Nominal width of a tie plate
TiePlateCenter = 15 #Distance from tie plate center to tie center

#---------------------
#Track Face Dimensions
#---------------------

#You should make demo pieces in hammer and measure from that.
#Each entry is a top-down 2D box drawn from the center of the track face to the respective point.
#All the points have to be collinear (on the same line)!

#Ang0 (North, 0 Right / 4 Forward)
TrackFace_Ang0 = table()
TrackFace_Ang0["rail_inner",vector2] = vec2(12,0)
TrackFace_Ang0["rail_outer",vector2] = vec2(15,0)
TrackFace_Ang0["ballast_corner",vector2] = vec2(32,0)
TrackFace_Ang0["ballast_edge",vector2] = vec2(64,0)

#Ang1 (Northeast, 1 Right / 4 Forward, about 14 degrees)
TrackFace_Ang1 = table()
TrackFace_Ang1["rail_inner",vector2] = vec2(12,3)
TrackFace_Ang1["rail_outer",vector2] = vec2(15,3.75)
TrackFace_Ang1["ballast_corner",vector2] = vec2(32,8)
TrackFace_Ang1["ballast_edge",vector2] = vec2(64,16)

#Ang2 (Northeast, 2 Right / 4 Forward, about 28 degrees)
TrackFace_Ang2 = table()
TrackFace_Ang2["rail_inner",vector2] = vec2(11,5.5)
TrackFace_Ang2["rail_outer",vector2] = vec2(14,7)
TrackFace_Ang2["ballast_corner",vector2] = vec2(29,14.5)
TrackFace_Ang2["ballast_edge",vector2] = vec2(58,29)

#Ang2 (Northeast, 4 Right / 4 Forward, exactly 45 degrees)
TrackFace_Ang4 = table()
TrackFace_Ang4["rail_inner",vector2] = vec2(8.5,8.5)
TrackFace_Ang4["rail_outer",vector2] = vec2(10.75,10.75)
TrackFace_Ang4["ballast_corner",vector2] = vec2(23,23)
TrackFace_Ang4["ballast_edge",vector2] = vec2(46,46)

#The rest of the angles will be auto-generated based on these.

#---------------
#Track Materials
#---------------

#Don't touch these unless you really know what you're doing.

#Skins
BallastSkins = array( #Used for the sides of the ballast trapezoid
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_DEV"
)
BallastTrackbedSkins = array( #Used for the blended parts of switches
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_NOTIES_OILY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_NOTIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_NOTIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_NOTIES_OILY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_NOTIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_NOTIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_TRACKBED_DEV"
)
BallastTiesSkins = array( #Used for the center part of non-blended (normal) track ballast
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_TIES_OILY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_TIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_BROWN_TIES_CONC",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_TIES_OILY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_TIES",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_GRAY_TIES_OILY",
    "TRAKPAK3_COMMON/TRACKS/BALLAST_TIES_DEV"
)
TieNoPlateSkins = array( #Used for 3D ties (Switches only)
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_NOPLATES_OILY",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_NOPLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_CONC_NOPLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_NOPLATES_OILY",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_NOPLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_CONC_NOPLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_NOPLATES_DEV"
)
TiePlateSkins = array( #Used for all 3D ties
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_PLATES_OILY",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_PLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_CONC_PLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_PLATES_OILY",
    "TRAKPAK3_COMMON/TRACKS/TIE_WOOD_PLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_CONC_PLATES",
    "TRAKPAK3_COMMON/TRACKS/TIE_PLATES_DEV"
)

#Rail Materials - Not Skinned
Mat_RailSide = "TRAKPAK3_COMMON/TRACKS/RAIL_SIDE"
Mat_RailTop = "TRAKPAK3_COMMON/TRACKS/RAIL_TOP_SHINY"
Mat_RailTop_Rusty = "TRAKPAK3_COMMON/TRACKS/RAIL_TOP_RUSTY"

#Texture Dimensions
#U is the width of the texture, V is the height
#Scale is the texture scale that will be applied in hammer (Overall Scale will auto-compensate this)
BallastU = 512
BallastV = 512
BallastScale = 0.115
RailSideU = 512
RailSideV = 32
RailSideScale = 0.2
RailTopU = 512
RailTopV = 32
RailTopScale = 0.25
TieU = 512
TieV = 64
TieScale = 0.25

#-----------------------------------------------------------
#End of User Config - Don't touch anything after this point!
#-----------------------------------------------------------

Mat_Ballast = BallastSkins[1,string]
Mat_Trackbed_NoTies = BallastTrackbedSkins[1,string]
Mat_Trackbed_Ties = BallastTiesSkins[1,string]

Mat_Tie = TieNoPlateSkins[1,string]
Mat_Tie_Plates = TiePlateSkins[1,string]

#Scaling

if(Scale<1){Scale = 1}

BallastScale *= Scale
RailSideScale *= Scale
RailTopScale *= Scale
TieScale *= Scale

foreach(K,V:vector2=TrackFace_Ang0){
    V *= Scale
    TrackFace_Ang0[K,vector2] = V
}
foreach(K,V:vector2=TrackFace_Ang1){
    V *= Scale
    TrackFace_Ang1[K,vector2] = V
}
foreach(K,V:vector2=TrackFace_Ang2){
    V *= Scale
    TrackFace_Ang2[K,vector2] = V
}
foreach(K,V:vector2=TrackFace_Ang4){
    V *= Scale
    TrackFace_Ang4[K,vector2] = V
}

OriginHeight *= Scale
BallastHeight *= Scale
RailBottomHeight *= Scale
RailTopHeight *= Scale
TieBottomHeight *= Scale
TieTopHeight *= Scale
BankHeight *= Scale
CheckLength *= Scale
TieSeparation *= Scale

TieWidth *= Scale
TieThickness *= Scale
TiePlateWidth *= Scale
TiePlateCenter *= Scale
